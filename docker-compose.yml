services:
  backend:
    build:
      context: backend
      target: production
    command: fastapi run backend/server.py
    healthcheck:
      test:
        [
          "CMD",
          "python",
          "-c",
          "from http.client import HTTPConnection; conn =
          HTTPConnection('127.0.0.1', 8000); conn.request('GET', '/health');
          exit(0) if conn.getresponse().status == 200 else exit(1)",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    restart: unless-stopped

  frontend:
    build:
      context: frontend
    env_file:
      - .env
    command: python3 frontend/tg_bot.py
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy

  node_exporter:
    image: prom/node-exporter
    restart: unless-stopped

  prometheus:
    image: prom/prometheus
    ports:
      - "127.0.0.1:4002:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      # - ./node_rules.yml:/etc/prometheus/node_rules.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--enable-feature=expand-external-labels"
    depends_on:
      backend:
        condition: service_healthy

  grafana:
    image: grafana/grafana
    ports:
      - "127.0.0.1:4001:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      prometheus:
        condition: service_started

volumes:
  grafana-storage:
